C14-1191,Does a Computational Linguist have to be a Linguist?,2014,0,0,1,1,40306,martin kay,"Proceedings of {COLING} 2014, the 25th International Conference on Computational Linguistics: Technical Papers",0,"Early computational linguists supplied much of theoretical basis that the ALPAC report said was needed for research on the practical problem of machine translation. The result of their efforts turned out to be more fundamental in that it provided a general theoretical basis for the study of language use as a process, giving rise eventually to constraint-based grammatical formalisms for syntax, finite-state approaches to morphology and phonology, and a host of models how speakers might assemble sentences, and hearers take them apart. Recently, an entirely new enterprise, based on machine learning and big data, has sprung on the scene and challenged the ALPAC committeexe2x80x99s finding that linguistic processing must have a firm basis in linguistic theory. In this talk, I will show that the long-term development of linguistic processing requires linguistic theory, sophisticated statistical manipulation of big data, and a third component which is not linguistic at all."
kennington-etal-2012-suffix,Suffix Trees as Language Models,2012,14,5,2,0,821,casey kennington,Proceedings of the Eighth International Conference on Language Resources and Evaluation ({LREC}'12),0,"Suffix trees are data structures that can be used to index a corpus. In this paper, we explore how some properties of suffix trees naturally provide the functionality of an n-gram language model with variable n. We explain these properties of suffix trees, which we leverage for our Suffix Tree Language Model (STLM) implementation and explain how a suffix tree implicitly contains the data needed for n-gram language modeling. We also discuss the kinds of smoothing techniques appropriate to such a model. We then show that our suffix-tree language model implementation is competitive when compared to the state-of-the-art language model SRILM (Stolke, 2002) in statistical machine translation experiments."
2012.freeopmt-1.1,The new machine translation: getting blood from a stone,2012,-1,-1,1,1,40306,martin kay,Proceedings of the Third International Workshop on Free/Open-Source Rule-Based Machine Translation,0,None
N09-1015,Intersecting Multilingual Data for Faster and Better Statistical Translations,2009,13,12,2,1,3161,yu chen,Proceedings of Human Language Technologies: The 2009 Annual Conference of the North {A}merican Chapter of the Association for Computational Linguistics,0,"In current phrase-based SMT systems, more training data is generally better than less. However, a larger data set eventually introduces a larger model that enlarges the search space for the translation problem, and consequently requires more time and more resources to translate. We argue redundant information in a SMT system may not only delay the computations but also affect the quality of the outputs. This paper proposes an approach to reduce the model size by filtering out the less probable entries based on compatible data in an intermediate language, a novel use of triangulation, without sacrificing the translation quality. Comprehensive experiments were conducted on standard data sets. We achieved significant quality improvements (up to 2.3 Bleu points) while translating with reduced models. In addition, we demonstrate a straightforward combination method for more progressive filtering. The reduction of the model size can be up to 94% with the translation quality being preserved."
chen-etal-2008-improving,Improving Statistical Machine Translation Efficiency by Triangulation,2008,11,12,3,1,3161,yu chen,Proceedings of the Sixth International Conference on Language Resources and Evaluation ({LREC}'08),0,"In current phrase-based Statistical Machine Translation systems, more training data is generally better than less. However, a larger data set eventually introduces a larger model that enlarges the search space for the decoder, and consequently requires more time and more resources to translate. This paper describes an attempt to reduce the model size by filtering out the less probable entries based on testing correlation using additional training data in an intermediate third language. The central idea behind the approach is triangulation, the process of incorporating multilingual knowledge in a single system, which eventually utilizes parallel corpora available in more than two languages. We conducted experiments using Europarl corpus to evaluate our approach. The reduction of the model size can be up to 70{\%} while the translation quality is being preserved."
2008.eamt-1.6,Hybrid machine translation architectures within and beyond the {E}uro{M}atrix project,2008,-1,-1,5,0,13817,andreas eisele,Proceedings of the 12th Annual conference of the European Association for Machine Translation,0,None
J05-4001,{ACL} Lifetime Achievement Award: A Life of Language,2005,-1,-1,1,1,40306,martin kay,Computational Linguistics,0,None
W04-1608,{A}rabic Script-Based Languages Deserve to be Studied Linguistically,2004,-1,-1,1,1,40306,martin kay,Proceedings of the Workshop on Computational Approaches to {A}rabic Script-based Languages,0,None
2000.iwpt-1.3,Guides and Oracles for Linear-Time Parsing,2000,-1,-1,1,1,40306,martin kay,Proceedings of the Sixth International Workshop on Parsing Technologies,0,"If chart parsing is taken to include the process of reading out solutions one by one, then it has exponential complexity. The stratagem of separating read-out from chart construction can also be applied to other kinds of parser, in particular, to left-comer parsers that use early composition. When a limit is placed on the size of the stack in such a parser, it becomes context-free equivalent. However, it is not practical to profit directly from this observation because of the large state sets that are involved in otherwise ordinary situations. It may be possible to overcome these problems by means of a guide constructed from a weakened version of the initial grammar."
1999.mtsummit-1.2,Chart translation,1999,-1,-1,1,1,40306,martin kay,Proceedings of Machine Translation Summit VII,0,"For efficiency reasons, Machine Translation systems are generally designed to eliminate ambiguities as early as possible even if delaying the decision would make a more informed choice possible. This paper takes the contrary view, arguing that essentially all choices should be deferred so that large numbers of competing translations will be produced in typical cases. Representing all the data structures in a suitable packed form, much as alternative structures are represented in a chart parser, makes this practicable."
P96-1027,Chart Generation,1996,7,128,1,1,40306,martin kay,34th Annual Meeting of the Association for Computational Linguistics,1,Charts constitute a natural uniform architecture for parsing and generation provided string position is replaced by a notion more appropriate to logical forms and that measures are taken to curtail generation paths containing semantically incomplete phrases.
J94-3001,Regular Models of Phonological Rule Systems,1994,13,559,2,0,21977,ronald kaplan,Computational Linguistics,0,This paper presents a set of mathematical and computational tools for manipulating and reasoning about regular languages and regular relations and argues that they provide a solid basis for computational phonology. It shows in detail how this framework applies to ordered sets of context-sensitive rewriting rules and also to grammars in Koskenniemi's two-level formalism. This analysis provides a common representation of phonological constraints that supports efficient generation and recognition by a single simple interpreter.
J94-2005,Parsing and empty nodes,1994,17,7,2,0.54332,4047,mark johnson,Computational Linguistics,0,"This paper describes a method for ensuring the termination of parsers using grammars that freely posit empty nodes. The basic idea is that each empty node must be associated with a lexical item appearing in the input string, called its sponsor. A lexical item, as well as labeling the node for the corresponding word, provides labels for a fixed number, possibly zero, of empty nodes. The number of nodes appearing in the parse tree is thus bounded before parsing begins. Termination follows trivially. The technique is applicable to any standard parsing algorithm."
J93-1006,Text-Translation Alignment,1993,11,293,1,1,40306,martin kay,Computational Linguistics,0,"We present an algorithm for aligning texts with their translations that is based only on internal evidence. The relaxation process rests on a notion of which word in one text corresponds to which word in the other text that is essentially based on the similarity of their distributions. It exploits a partial alignment of the word level to induce a maximum likelihood alignment of the sentence level, which is in turn used, in the next iteration, to refine the word level estimate. The algorithm appears to converge to the correct sentence alignment in only a few iterations."
C92-1002,Ongoing directions in Computational Linguistics,1992,0,1,1,1,40306,martin kay,{COLING} 1992 Volume 1: The 14th {I}nternational {C}onference on {C}omputational {L}inguistics,0,None
W91-0101,"Monotonicity, Headedness, and Reversible Grammar",1991,-1,-1,1,1,40306,martin kay,Reversible Grammar in Natural Language Processing,0,None
1991.mtsummit-panels.4,Where Do Translators Fit Into {MT}?,1991,-1,-1,4,0,57445,alex gross,Proceedings of Machine Translation Summit III: Panels,0,None
1991.iwpt-1.1,Proceedings of the Second International Workshop on Parsing Technologies ({IWPT} {'}91),1991,-1,-1,2,0,56874,masaru tomita,Proceedings of the Second International Workshop on Parsing Technologies,0,"February 13-25, 1991"
C90-1003,Semantic Abstraction and Anaphora,1990,11,9,2,0.54332,4047,mark johnson,{COLING} 1990 Volume 1: Papers presented to the 13th International Conference on Computational Linguistics,0,"This paper describes a way of expressing syntactic rules that associate semantic formulae with strings, but in a manner that is independent of the syntactic details of these formulae. In particular we show how the same rules construct predicate argument formulae in the style of Montague grammar[13], representations reminiscent of situation semantics(Barwise and Perry [2]) and of the event logic of Davidson [5], or representations inspired by the discourse representations proposed by Kamp [9]. The idea is that semantic representations are specified indirectly using semantic construction operators, which enforce an abstraction barrier between the grammar and the semantic representations themselves. First we present a simple grammar which is compatible with the three different sets of constructors for the three formalisms. We then extend the grammar to provide one treatment that accounts for quantifier raising in the three different semantic formalisms"
W89-0206,Head-Driven Parsing,1989,0,60,1,1,40306,martin kay,Proceedings of the First International Workshop on Parsing Technologies,0,
T87-1012,The Linguistic Connection,1987,2,0,1,1,40306,martin kay,Theoretical Issues in Natural Language Processing 3,0,None
E87-1002,Nonconcatenative Finite-State Morphology,1987,2,92,1,1,40306,martin kay,Third Conference of the {E}uropean Chapter of the Association for Computational Linguistics,0,None
1987.mtsummit-1.21,Machines and People in Translation,1987,-1,-1,1,1,40306,martin kay,Proceedings of Machine Translation Summit I,0,None
1987.mtsummit-1.44,Concluding Remarks,1987,-1,-1,1,1,40306,martin kay,Proceedings of Machine Translation Summit I,0,None
P86-1040,Machine Translation will not Work,1986,0,2,1,1,40306,martin kay,24th Annual Meeting of the Association for Computational Linguistics,1,None
P84-1018,Functional Unification Grammar: A Formalism for Machine Translation,1984,0,76,1,1,40306,martin kay,10th International Conference on Computational Linguistics and 22nd Annual Meeting of the Association for Computational Linguistics,1,"Functional Unification Grammar provides an opportunity to encompass within one formalism and computational system the parts of machine translation systems that have usually been treated separately, natably analysis, transfer, and synthesis. Many of the advantages of this formalism come from the fact that it is monotonic allowing data structures to grow differently as different nondeterministic alternatives in a computation are pursued, but never to be modified in any way. A striking feature of this system is that it is fundamental reversible, allowing a to translate as b only if b could translate as a."
P84-1096,The Dictionary Server,1984,0,7,1,1,40306,martin kay,10th International Conference on Computational Linguistics and 22nd Annual Meeting of the Association for Computational Linguistics,1,None
J82-2005,Machine Translation,1982,0,0,1,1,40306,martin kay,American Journal of Computational Linguistics,0,None
P79-1001,Syntactic Processing,1979,1,18,1,1,40306,martin kay,17th Annual Meeting of the Association for Computational Linguistics,1,None
T75-1004,Syntactic Processing and Functional Sentence Perspective,1975,0,19,1,1,40306,martin kay,Theoretical Issues in Natural Language Processing: Supplement,0,None
C73-2019,Morphological Analysis,1973,3,187,1,1,40306,martin kay,{COLING} 1973 Volume 2: Computational And Mathematical Linguistics: Proceedings of the International Conference on Computational Linguistics,0,None
C67-1009,Experiments With a Powerful Parser,1967,0,45,1,1,40306,martin kay,{COLING} 1967 Volume 1: Conference Internationale Sur Le Traitement Automatique Des Langues,0,"Abstract : A description is given of a sophisticated computer program for the syntactic analysis of natural languages. The study discusses the notation used to write rules and the extent to which these rules can be made to state the same linguistic facts as a transformational grammar. Whereas most existing programs apply context-free phrase-structure grammars, this new program can analyze sentences with context-sensitive grammars and with grammars of a class very similar to transformational grammars. The program, which is written for the IBM 7040/44 computer, is nondeterministic: The various interpretations of an ambiguous sentence are all worked on simultaneously; at no stage does the program develop one interpretation rather than another. If two interpretations differ only in some small part of a partial syntactic structure, then only one complete structure is stored with two versions of the ambiguous part. The unambiguous portion is worked on only once for both interpretations. Although the current version of the program is written in ALGOL, with very little regard for efficiency, the basic algorithm is inherently much more efficient than any of its competitors. (Author)"
