2021.cnl-1.2,Grammar-Based Concept Alignment for Domain-Specific Machine Translation,2021,-1,-1,2,0,11487,arianna masciolini,Proceedings of the Seventh International Workshop on Controlled Natural Language (CNL 2020/21),0,None
2020.cl-2.6,Abstract Syntax as Interlingua: Scaling Up the Grammatical Framework from Controlled Languages to Robust Pipelines,2020,22,0,1,1,11488,aarne ranta,Computational Linguistics,0,"Abstract syntax is an interlingual representation used in compilers. Grammatical Framework (GF) applies the abstract syntax idea to natural languages. The development of GF started in 1998, first as a tool for controlled language implementations, where it has gained an established position in both academic and commercial projects. GF provides grammar resources for over 40 languages, enabling accurate generation and translation, as well as grammar engineering tools and components for mobile and Web applications. On the research side, the focus in the last ten years has been on scaling up GF to wide-coverage language processing. The concept of abstract syntax offers a unified view on many other approaches: Universal Dependencies, WordNets, FrameNets, Construction Grammars, and Abstract Meaning Representations. This makes it possible for GF to utilize data from the other approaches and to build robust pipelines. In return, GF can contribute to data-driven approaches by methods to transfer resources from one language to others, to augment data by rule-based generation, to check the consistency of hand-annotated corpora, and to pipe analyses into high-precision semantic back ends. This article gives an overview of the use of abstract syntax as interlingua through both established and emerging NLP applications involving GF."
W19-6102,Bootstrapping {UD} treebanks for Delexicalized Parsing,2019,0,0,2,0.5979,21982,prasanth kolachina,Proceedings of the 22nd Nordic Conference on Computational Linguistics,0,"Standard approaches to treebanking traditionally employ a waterfall model (Sommerville, 2010), where annotation guidelines guide the annotation process and insights from the annotation process in turn lead to subsequent changes in the annotation guidelines. This process remains a very expensive step in creating linguistic resources for a target language, necessitates both linguistic expertise and manual effort to develop the annotations and is subject to inconsistencies in the annotation due to human errors. In this paper, we propose an alternative approach to treebanking{---}one that requires writing grammars. This approach is motivated specifically in the context of Universal Dependencies, an effort to develop uniform and cross-lingually consistent treebanks across multiple languages. We show here that a bootstrapping approach to treebanking via interlingual grammars is plausible and useful in a process where grammar engineering and treebanking are jointly pursued when creating resources for the target language. We demonstrate the usefulness of synthetic treebanks in the task of delexicalized parsing. Our experiments reveal that simple models for treebank generation are cheaper than human annotated treebanks, especially in the lower ends of the learning curves for delexicalized parsing, which is relevant in particular in the context of low-resource languages."
W19-3101,Grammatical Framework: an Interlingual Grammar Formalism,2019,0,0,1,1,11488,aarne ranta,Proceedings of the 14th International Conference on Finite-State Methods and Natural Language Processing,0,None
W17-0414,From {U}niversal {D}ependencies to Abstract Syntax,2017,9,0,1,1,11488,aarne ranta,Proceedings of the {N}o{D}a{L}i{D}a 2017 Workshop on Universal Dependencies ({UDW} 2017),0,None
W17-0247,Cross-Lingual Syntax: Relating Grammatical Framework with {U}niversal {D}ependencies,2017,0,0,1,1,11488,aarne ranta,Proceedings of the 21st Nordic Conference on Computational Linguistics,0,None
2016.eamt-2.15,International translation in the Grammatical Framework ({GF}),2016,-1,-1,1,1,11488,aarne ranta,Proceedings of the 19th Annual Conference of the European Association for Machine Translation: Projects/Products,0,None
2016.eamt-2.16,Domain-specific multilingual translation for producers of information,2016,-1,-1,1,1,11488,aarne ranta,Proceedings of the 19th Annual Conference of the European Association for Machine Translation: Projects/Products,0,None
W15-3301,Grammar Engineering for a Customer: a Case Study with Five Languages,2015,19,2,1,1,11488,aarne ranta,Proceedings of the Grammar Engineering Across Frameworks ({GEAF}) 2015 Workshop,0,"This paper describes a grammar-based translation system built by a company for a paying customer. The system uses a multilingual grammar for English, Finnish, German, Spanish, and Swedish written in GF (Grammatical Framework). The grammar covers a corpus of technical texts in Swedish, describing properties of places and objects related to accessibility by disabled people. This task is more complex than most previous GF tasks, which have addressed controlled languages. The main goals of the paper are: (1) to find a grammar architecture and workflow for domain-specific grammars on real data (2) to estimate the quality reachable with a reasonable engineering effort (3) to assess the cost of grammar-based translation and its commercial viability."
W15-3306,A Cloud-Based Editor for Multilingual Grammars,2015,18,0,3,0,32196,thomas hallgren,Proceedings of the Grammar Engineering Across Frameworks ({GEAF}) 2015 Workshop,0,"Writing deep linguistic grammars has been considered a highly specialized skill, requiring the use of tools with steep learning curves and complex installation procedures. As the use of statistical methods has increased, new generations of computational linguists are getting less and less prepared for grammar writing tasks. In an aim to provide a better learning experience for grammar writers, we present a grammar engineering tool that resides in the cloud. It has been used in several tutorial courses and self-studies, and it allows absolute beginners to write their first grammars and parse examples in 10 minutes. The cloud-based grammar engineering tool is built on top of GF (Grammatical Framework), a grammar formalism that has an explicit tecto/phenogrammar distinction, is based on ideas from type theory and functional programming and comes equipped with a grammar library supporting 30 languages."
W15-3307,Formalising the {S}wedish Constructicon in Grammatical Framework,2015,7,2,4,0,11129,normunds gruzitis,Proceedings of the Grammar Engineering Across Frameworks ({GEAF}) 2015 Workshop,0,None
W15-3117,"{C}hinese in the Grammatical Framework: Grammar, Translation, and Other Applications Anonymous",2015,37,0,1,1,11488,aarne ranta,Proceedings of the Eighth {SIGHAN} Workshop on {C}hinese Language Processing,0,"Grammatical Framework (GF) is a grammar formalism based on type theory and functional programming. It is also a platform for multilingual applications such as translation, localization, and information retrieval. To enable non-linguist programmers to build linguistically precise applications, GF provides a Resource Grammar Library (RGL), which defines the basic syntax, morphology, and lexicon of languages in the form of easily usable software libraries. The RGL is an open-source collaborative project, which currently covers 30 languages with a shared tree structure. Chinese, in addition to basic RGL, has a translation lexicon of over 30,000 lemmas and a mobile translation app. This paper gives an overview of GF, emphasizing applications where Chinese is related to other languages. We also address the theoretical question how Chinese fits into the framework with a shared tree structure."
W15-3015,{GF} Wide-coverage {E}nglish-{F}innish {MT} system for {WMT} 2015,2015,8,1,2,0.5979,21982,prasanth kolachina,Proceedings of the Tenth Workshop on Statistical Machine Translation,0,"This paper describes the GF Widecoverage MT system submitted to WMT 2015 for translation from English to Finnish. Our system uses a interlingua based approach, in which the interlingua is a shared formal representation, that abstracts syntactic structures over multiple languages. Our final submission is a reranked system in which we combine this baseline MT system with a factored LM model."
W14-5508,Developing an interlingual translation lexicon using {W}ord{N}ets and Grammatical Framework,2014,21,4,3,1,16836,shafqat virk,Proceedings of the Fifth Workshop on South and Southeast {A}sian Natural Language Processing,0,"The Grammatical Framework (GF) offers perfect translation between controlled subsets of natural languages. E.g., an abstract syntax for a set of sentences in school mathematics is the interlingua between the corresponding sentences in English and Hindi, say. GF xe2x80x9cresource grammarsxe2x80x9d specify how to say something in English or Hindi; these are reused with xe2x80x9capplication grammarsxe2x80x9d that specify what can be said (mathematics, tourist phrases, etc.). More recent robust parsing and parse-tree disambiguation allow GF to parse arbitrary English text. We report here an experiment to linearise the resulting tree directly to other languages (e.g. Hindi, German, etc.), i.e., we use a language independent resource grammar as the interlingua. We focus particularly on the last part of the translation system, the interlingual lexicon and word sense disambiguation (WSD). We improved the quality of the wide coverage interlingual translation lexicon by using the Princeton and Universal WordNet data. We then integrated an existing WSD tool and replaced the usual GF style lexicons, which give one target word per source word, by the WordNet based lexicons. These new lexicons and WSD improve the quality of translation in most cases, as we show by examples. Both WordNets and WSD in general are well known, but this is the first use of these tools with GF."
W14-1401,Types and Records for Predication,2014,24,0,1,1,11488,aarne ranta,Proceedings of the {EACL} 2014 Workshop on Type Theory and Natural Language Semantics ({TTNLS}),0,"This paper studies the use of records and dependent types in GF (Grammatical Framework) to build a grammar for predication with an unlimited number of subcategories, also covering extraction and coordination. The grammar is implemented for Chinese, English, Finnish, and Swedish, sharing the maximum of code to identify similarities and differences between the languages. Equipped with a probabilistic model and a large lexicon, the grammar has also been tested in widecoverage machine translation. The first evaluations show improvements in parsing speed, coverage, and robustness in comparison to earlier GF grammars. The study confirms that dependent types, records, and functors are useful in both engineering and theoretical perspectives."
detrez-etal-2014-sharing,Sharing resources between free/open-source rule-based machine translation systems: Grammatical Framework and Apertium,2014,14,1,3,0,39773,gregoire detrez,Proceedings of the Ninth International Conference on Language Resources and Evaluation ({LREC}'14),0,"In this paper, we describe two methods developed for sharing linguistic data between two free and open source rule based machine translation systems: Apertium, a shallow-transfer system; and Grammatical Framework (GF), which performs a deeper syntactic transfer. In the first method, we describe the conversion of lexical data from Apertium to GF, while in the second one we automatically extract Apertium shallow-transfer rules from a GF bilingual grammar. We evaluated the resulting systems in a English-Spanish translation context, and results showed the usefulness of the resource sharing and confirmed the a-priori strong and weak points of the systems involved. {\textbackslash}{\textbackslash}"
E14-2011,Speech-Enabled Hybrid Multilingual Translation for Mobile Devices,2014,10,14,3,0.454545,17411,krasimir angelov,Proceedings of the Demonstrations at the 14th Conference of the {E}uropean Chapter of the Association for Computational Linguistics,0,"This paper presents an architecture and a prototype for speech-to-speech translation on Android devices, based on GF (Grammatical Framework). From the userxe2x80x99s point of view, the advantage is that the system works off-line and yet has a lean size; it also gives, as a bonus, grammatical information useful for language learners. From the developerxe2x80x99s point of view, the advantage is the open architecture that permits the customization of the system to new languages and for special purposes. Thus the architecture can be used for controlled-language-like translators that deliver very high quality, which is the traditional strength of GF. However, this paper focuses on a general-purpose system that allows arbitrary input. It covers eight languages."
W13-2715,Multilingual access to cultural heritage content on the Semantic Web,2013,14,8,2,0.582021,2747,dana dannells,"Proceedings of the 7th Workshop on Language Technology for Cultural Heritage, Social Sciences, and Humanities",0,"As the amount of cultural data available on the Semantic Web is expanding, the demand of accessing this data in multiple languages is increasing. Previous work on multilingual access to cultural heritage information has shown that mapping from ontologies to natural language requires at least two different steps: (1) mapping multilingual metadata to interoperable knowledge sources; (2) assigning multilingual knowledge to cultural data. This paper presents our work on making cultural heritage content available on the Semantic Web and accessible in 15 languages. The objective of our work is both to form queries and to retrieve semantic content in multiple languages. We describe our experiences with processing museum data extracted from two different sources, harmonizing this data and making its content accessible in natural language."
2013.mtsummit-posters.10,{MT} Techniques in a Retrieval System of Semantically Enriched Patents,2013,11,1,7,0,18034,meritxell gonzalez,Proceedings of Machine Translation Summit XIV: Posters,0,This paper focuses on how automaticn translation techniques integrated in an patent retrieval system increase its capabilities and make possible extended features and functionalities. We describe 1)n a novel methodology for natural languagen to SPARQL translation based on a grammarxe2x80x93n ontology interoperability automation and a query grammar for the patents domain; 2) a devised strategy for statisticalbasedn translation of patents that allows to transfer semantic annotations to the targetn language; 3) a built-in knowledge representation infrastructure that uses multilingual semantic annotations; and 4) an online application that offers a multilingualn search interface over structural knowledgen databases (domain ontologies) and multilingual documents (biomedical patents)n that have been automatically translated.
2013.mtsummit-european.12,{MOLTO} - Multilingual On Line Translation,2013,-1,-1,1,1,11488,aarne ranta,Proceedings of Machine Translation Summit XIV: European projects,0,None
E12-1066,Smart Paradigms and the Predictability and Complexity of Inflectional Morphology,2012,18,17,2,0,39773,gregoire detrez,Proceedings of the 13th Conference of the {E}uropean Chapter of the Association for Computational Linguistics,0,"Morphological lexica are often implemented on top of morphological paradigms, corresponding to different ways of building the full inflection table of a word. Computationally precise lexica may use hundreds of paradigms, and it can be hard for a lexicographer to choose among them. To automate this task, this paper introduces the notion of a smart paradigm. It is a meta-paradigm, which inspects the base form and tries to infer which low-level paradigm applies. If the result is uncertain, more forms are given for discrimination. The number of forms needed in average is a measure of predictability of an inflection system. The overall complexity of the system also has to take into account the code size of the paradigms definition itself. This paper evaluates the smart paradigms implemented in the open-source GF Resource Grammar Library. Predictability and complexity are estimated for four different languages: English, French, Swedish, and Finnish. The main result is that predictability does not decrease when the complexity of morphology grows, which means that smart paradigms provide an efficient tool for the manual construction and/or automatically bootstrapping of lexica."
2012.eamt-1.61,A Hybrid System for Patent Translation,2012,20,13,3,1,36791,ramona enache,Proceedings of the 16th Annual conference of the European Association for Machine Translation,0,"This work presents a HMT system for patent translation. The system exploits the high coverage of SMT and the high precision of an RBMT system based on GF to deal with specific issues of the language. The translator is specifically developed to translate patents and it is evaluated in the English-French language pair. Although the number of issues tackled by the grammar are not extremely numerous yet, both manual and automatic evaluations consistently show their preference for the hybrid system in front of the two individual translators."
R11-1010,An Open Source {P}unjabi Resource Grammar,2011,6,2,3,1,16836,shafqat virk,Proceedings of the International Conference Recent Advances in Natural Language Processing 2011,0,"We describe an open source computational grammar for Punjabi; a resource-poor language. The grammar is developed in GF (Grammatical framework), which is a tool for multilingual grammar formalism. First, we explore different syntactic features of Punjabi and then we implement them in accordance with GF grammar requirements, to make Punjabi the 17th language in the GF resource grammar library."
2011.mtsummit-wpt.7,Patent translation within the {MOLTO} project,2011,9,16,4,0.517241,5030,cristina espanabonet,Proceedings of the 4th Workshop on Patent Translation,0,"MOLTO is an FP7 European project whose goal is to translate texts between multiple languages in real time with high quality. Patents translation is a case of study where research is focused on simultaneously obtaining a large coverage without loosing quality in the translation. This is achieved by hybridising between a grammar-based multilingual translation system, GF, and a specialised statistical machine translation system. Moreover, both individual systems by themselves already represent a step forward in the translation of patents in the biomedical domain, for which the systems have been trained."
2011.freeopmt-1.1,{MOLTO}: multilingual on-line translation,2011,-1,-1,1,1,11488,aarne ranta,Proceedings of the Second International Workshop on Free/Open-Source Rule-Based Machine Translation,0,None
Y10-1020,"Developing {P}unjabi Morphology, Corpus and Lexicon",2010,10,4,2,0.833333,34869,muhammad humayoun,"Proceedings of the 24th Pacific Asia Conference on Language, Information and Computation",0,"We describe an implementation of morphology, development of a corpus and building of a lexicon for Punjabi language. Such resources are building blocks for various language technology tasks ranging from part of speech tagging to machine translation. Their importance is further increased by the fact that Punjabi is an under resourced language. We release these resources as open-source."
W10-3220,An Open Source {U}rdu Resource Grammar,2010,12,3,3,1,16836,shafqat virk,Proceedings of the Eighth Workshop on {A}sian Language Resouces,0,"We develop a grammar for Urdu in Grammatical Framework (GF). GF is a programming language for defining multilingual grammar applications. GF resource grammar library currently supports 16 languages. These grammars follow an Interlingua approach and consist of morphology and syntax modules that cover a wide range of features of a language. In this paper we explore different syntactic features of the Urdu language, and show how to fit them in the multilingual framework of GF. We also discuss how we cover some of the distinguishing features of Urdu such as, ergativity in verb agreement (see Sec 4.2). The main purpose of GF resource grammar library is to provide an easy way to write natural language applications without knowing the details of syntax, morphology and lexicon. To demonstrate it, we use Urdu resource grammar to add support for Urdu in the work reported in (Angelov and Ranta, 2010) which is an implementation of Attempto (Attempto 2008) in GF."
P10-4012,Tools for Multilingual Grammar-Based Translation on the Web,2010,32,9,1,1,11488,aarne ranta,Proceedings of the {ACL} 2010 System Demonstrations,0,"This is a system demo for a set of tools for translating texts between multiple languages in real time with high quality. The translation works on restricted languages, and is based on semantic interlinguas. The underlying model is GF (Grammatical Framework), which is an open-source toolkit for multilingual grammar implementations. The demo will cover up to 20 parallel languages.n n Two related sets of tools are presented: grammarian's tools helping to build translators for new domains and languages, and translator's tools helping to translate documents. The grammarian's tools are designed to make it easy to port the technique to new applications. The translator's tools are essential in the restricted language context, enabling the author to remain in the fragments recognized by the system.n n The tools that are demonstrated will be applied and developed further in the European project MOLTO (Multilingual On-Line Translation) which has started in March 2010 and runs for three years."
E09-2003,Grammatical Framework Web Service,2009,9,13,3,0.882353,40056,bjorn bringert,Proceedings of the Demonstrations Session at {EACL} 2009,0,"We present a web service for natural language parsing, prediction, generation, and translation using grammars in Portable Grammar Format (PGF), the target format of the Grammatical Framework (GF) grammar compiler. The web service implementation is open source, works with any PGF grammar, and with any web server that supports FastCGI. The service exposes a simple interface which makes it possible to use it for interactive natural language web applications. We describe the functionality and interface of the web service, and demonstrate several applications built on top of it."
E09-2015,Grammar Development in {GF},2009,20,1,1,1,11488,aarne ranta,Proceedings of the Demonstrations Session at {EACL} 2009,0,"GF is a grammar formalism that has a powerful type system and module system, permitting a high level of abstraction and division of labour in grammar writing. GF is suited both for expert linguists, who appreciate its capacity of generalizations and conciseness, and for beginners, who benefit from its static type checker and, in particular, the GF Resource Grammar Library, which currently covers 12 languages. GF has a notion of multilingual grammars, enabling code sharing, linguistic generalizations, rapid development of translation systems, and painless porting of applications to new languages."
W07-1803,Dialogue System Localization with the {GF} Resource Grammar Library,2007,6,16,2,0,48371,nadine perera,Proceedings of the Workshop on Grammar-Based Approaches to Spoken Language Processing,0,"We present two experiments in the localization of spoken dialogue systems. The domain of the dialogue system is an MP3 application for automobiles. In the first experiment, a grammar in Nuance GSL format was rewritten in Grammatical Framework (GF). Within GF, the grammar was extended from two to six languages, giving a baseline for semantically complete grammars. In the second experiment, the German version of this baseline GF grammar was extended with the goal to restore the coverage of the original Nuance grammar."
C00-1036,{XML} and Multilingual Document Authoring: Convergent Trends,2000,11,60,3,0,26373,marc dymetman,{COLING} 2000 Volume 1: The 18th International Conference on Computational Linguistics,0,"Typical approaches to XML authoring view a XML document as a mixture of structure (the tags) and surface (text between the tags). We advocate a radical approach where the surface disappears from the XML document altogether to be handled exclusively by rendering mechanisms. This move is based on the view that the author's choices when authoring XML documents are best seen as language-neutral semantic decisions, that the structure can then be viewed as interlingual content, and that the textual output should be derived from this content by language-specific realization mechanisms, thus assimilating XML authoring to Multilingual Document Authoring. However, standard XML tools have important limitations when used for such a purpose: (1) they are weak at propagating semantic dependencies between different parts of the structure, and, (2) current XML rendering tools are ill-suited for handling the grammatical combination of textual units. We present two related proposals for overcoming these limitations: one (GF) originating in the tradition of mathematical proof editors and constructive type theory, the other (IG), a specialization of Definite Clause Grammars strongly inspired by GF."
W98-1308,A Multilingual Natural-Language Interface to Regular Expressions,1998,12,13,1,1,11488,aarne ranta,Finite State Methods in Natural Language Processing,0,"This report explains a natural-language interface to the formalism of XFST (Xerox Finite State Tool), which is a rich language used for specifying finite state automata and transducers. By using the interface, it is possible to give input to XFST in English and French, as well as to translate formal XFST code into these languages. It is also possible to edit XFST source files and their natural-language equivalents interactively, in parallel.n n The interface is based on an abstract syntax of the regular expression language and of a corresponding fragment of natural language. The relations between the different components are defined by compositional interpretation and generation functions, and by corresponding combinatory parsers. This design has been inspired by the logical grammar of Montague. The grammar-driven design makes it easy to extend and to modify the interface, and also to link it with other functionalities such as compiling and semantic reasoning. It is also easy to add new languages to the interface.n n Both the grammatical theory and the interface facilities based on it have been implemented in the functional programming language Haskell, which supports a declarative and modular style of programming. Some of the modules developed for the interface have other uses as well: there is a type system of regular expressions, preventing some compiler errors, a denotational semantics in terms of lazy lists, and an extension of the XFST script language by definitions of functions."
